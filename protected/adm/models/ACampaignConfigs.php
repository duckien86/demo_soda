<?php

class ACampaignConfigs extends CampaignConfigs
{
    const ACTIVE        = 1;
    const INACTIVE      = 0;
    const TEXT_ACTIVE   = 'Hiện';
    const TEXT_INACTIVE = 'Ẩn';

    public $new_link;

    public function rules()
    {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        return array(
            array('new_link', 'checkUnique', 'on' => array('create', 'update')),
            array('type, status', 'numerical', 'integerOnly' => TRUE),
            array('utm_source, utm_medium, utm_campaign, target_link', 'length', 'max' => 255),
            array('create_date', 'safe'),
            // The following rule is used by search().
            // @todo Please remove those attributes that should not be searched.
            array('id, utm_source, utm_medium, utm_campaign, target_link, type, create_date, status', 'safe', 'on' => 'search'),
        );
    }

    public function checkUnique()
    {
        $criteria = new CDbCriteria();
        $criteria->condition = "t.utm_source = :utm_source AND t.utm_campaign = :utm_campaign";
        $criteria->params = array(
            ':utm_source' => $this->utm_source,
            ':utm_campaign' => $this->utm_campaign,
        );
        if(!empty($this->id)){
            $criteria->addCondition("t.id != '$this->id'");
        }
        $model = ACampaignConfigs::model()->find($criteria);
        if($model){
            $this->addError('new_link', 'Link đã tồn tại');
            return FALSE;
        }

        return TRUE;
    }
    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels()
    {
        return array(
            'id'           => 'ID',
            'utm_source'   => 'Utm Source',
            'utm_medium'   => 'Utm Medium',
            'utm_campaign' => 'Utm Campaign',
            'target_link'  => 'Target Link',
            'type'         => 'Loại',
            'create_date'  => 'Ngày tạo',
            'status'       => 'Trạng thái',
            'new_link'     => 'Tạo link',
        );
    }

    public function beforeSave()
    {
        if ($this->create_date) {
            $this->create_date = date("Y-m-d H:i:s", strtotime(str_replace('/', '-', $this->create_date)));
        }

        return parent::beforeSave(); // TODO: Change the autogenerated stub
    }

    /**
     * Returns the static model of the specified AR class.
     * Please note that you should have this exact method in all your CActiveRecord descendants!
     *
     * @param string $className active record class name.
     *
     * @return ACampaignConfigs the static model class
     */
    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    /*public function getCampaign($id)
    {
        $campaigns = ACampaignConfigs::model()->findByAttributes(array('id' =>$id));
        if ($campaigns){
            return $campaigns->name;
        }
        return '';
    }*/

    public function generateLink()
    {
        $link = "https://freedoo.vnpt.vn?&utm_source=" . $this->utm_source . "&utm_campaign=" . $this->utm_campaign;
        return $link;
    }
}
